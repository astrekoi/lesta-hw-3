---
- name: Web infrastructure deployment
  block:
    - name: Create web directories structure
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      loop: "{{ web_directories }}"
      tags: directories

    - name: Deploy site content
      block:
        - name: Install site1 content
          ansible.builtin.template:
            src: site1_index.html.j2
            dest: "{{ web_root }}/site1/index.html"
            owner: www-data
            group: www-data
            mode: 0644

        - name: Install site2 content
          ansible.builtin.template:
            src: site2_index.html.j2
            dest: "{{ web_root }}/site2/index.html"
            owner: www-data
            group: www-data
            mode: 0644

        - name: Create main portal page
          ansible.builtin.template:
            src: main_page.html.j2
            dest: "{{ web_root }}/main/index.html"
            owner: www-data
            group: www-data
            mode: 0644
      tags: content

- name: Nginx configuration
  block:
    - name: Install Nginx package
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: yes
      tags: nginx
      become: yes

    - name: Create Nginx config directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      loop:
        - /etc/nginx/sites-available
        - /etc/nginx/sites-enabled
      tags: nginx
      become: yes

    - name: Update Nginx main config
      ansible.builtin.lineinfile:
        path: /etc/nginx/nginx.conf
        regexp: 'include /etc/nginx/sites-enabled/\*;'
        line: 'include /etc/nginx/sites-enabled/*.conf;'
        backrefs: yes
      notify: Reload Nginx
      tags: nginx
      become: yes

    - name: Deploy virtual hosts configurations
      ansible.builtin.template:
        src: sites.conf.j2
        dest: "/etc/nginx/sites-available/{{ item }}.conf"
        owner: root
        group: root
        mode: 0644
      loop: "{{ nginx_domains }}"
      vars:
        domain: "{{ item }}"
      notify: Reload Nginx
      tags: nginx
      become: yes

- name: SSL management
  block:
    - name: Install Python OpenSSL dependencies
      ansible.builtin.apt:
        name: python3-openssl
        state: present
        update_cache: yes
      tags: ssl
      become: yes

    - name: Generate private key
      community.crypto.openssl_privatekey:
        path: /etc/ssl/private/selfsigned.key
        size: 4096
        mode: 0600
        owner: root
        group: root
      tags: ssl
      become: yes

    - name: Generate self-signed certificate
      community.crypto.x509_certificate:
        path: /etc/ssl/certs/selfsigned.crt
        privatekey_path: /etc/ssl/private/selfsigned.key
        provider: selfsigned
        selfsigned_digest: sha256
        selfsigned_notBefore: "{{ ansible_date_time.iso8601 }}"
        selfsigned_notAfter: "+365d"
        subject:
          C: RU
          ST: SPb
          L: Saint-Petersburg
          O: Example Org
          OU: IT Department
          CN: "{{ nginx_domains[0] }}"
        subject_alt_name:
          - "DNS:{{ item }}"
      loop: "{{ nginx_domains }}"
      tags: ssl
      notify: Restart Nginx
      become: yes

- name: Update Nginx SSL configuration
  block:
    - name: Configure SSL params
      ansible.builtin.template:
        src: ssl_params.conf.j2
        dest: /etc/nginx/snippets/ssl_params.conf
        owner: root
        group: root
        mode: 0644
      notify: Restart Nginx
      become: yes

    - name: Update virtual hosts for SSL
      ansible.builtin.template:
        src: sites.conf.j2
        dest: "/etc/nginx/sites-available/{{ item }}.conf"
        owner: root
        group: root
        mode: 0644
      loop: "{{ nginx_domains }}"
      notify: Restart Nginx
      become: yes
